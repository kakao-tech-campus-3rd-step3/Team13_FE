name: Jira on PR Open (auto-create & move to In Review)

on:
  pull_request_target:
    types: [opened, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write   # PR 제목 업데이트/코멘트

jobs:
  jira-on-open:
    runs-on: ubuntu-latest

    steps:
      # 0) Jira 로그인
      - name: Jira Login
        uses: atlassian/gajira-login@v3
        with:
          base-url: ${{ secrets.JIRA_BASE_URL }}
          email: ${{ secrets.JIRA_USER_EMAIL }}
          api-token: ${{ secrets.JIRA_API_TOKEN }}

      # 1) PR 제목/브랜치에서 이슈 키 추출 (예: KAN-123)
      - name: Extract Jira issue key
        id: extract
        shell: bash
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          BRANCH="${{ github.event.pull_request.head.ref }}"
          KEY=$(echo "$TITLE $BRANCH" | grep -oE '[A-Z][A-Z0-9]+-[0-9]+' | head -n1 || true)
          echo "issue_key=$KEY" >> $GITHUB_OUTPUT
          echo "Found key: $KEY"

      # 2) 키 없으면 Jira 이슈 자동 생성
      - name: Create Jira issue if missing
        id: create
        if: steps.extract.outputs.issue_key == ''
        uses: atlassian/gajira-create@v3
        with:
          project: KAN
          issuetype: Task
          summary: '${{ github.event.pull_request.title }}'
          description: |
            *GitHub PR*: ${{ github.event.pull_request.html_url }}
            *Author*: ${{ github.event.pull_request.user.login }}
            ----
            *PR Body*:
            {{code}}
            ${{ github.event.pull_request.body }}
            {{code}}

      # 3) 최종 이슈 키 확정
      - name: Set ISSUE_KEY
        id: key
        run: |
          KEY="${{ steps.extract.outputs.issue_key }}"
          if [ -z "$KEY" ]; then
            KEY="${{ steps.create.outputs.issue }}"
          fi
          echo "issue_key=$KEY" >> $GITHUB_OUTPUT
          echo "Using issue: $KEY"

      # 4) PR 제목에 [KEY] 접두어 붙이고 코멘트로 Jira 링크 남기기
      - name: Update PR title and comment
        if: steps.key.outputs.issue_key != ''
        uses: actions/github-script@v7
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
        with:
          script: |
            const issueKey = '${{ steps.key.outputs.issue_key }}';
            const pr = context.payload.pull_request;
            const base = process.env.JIRA_BASE_URL.replace(/\/$/, '');
            const jiraUrl = `${base}/browse/${issueKey}`;

            let title = pr.title || '';
            if (!title.includes(issueKey)) {
              title = `[${issueKey}] ${title}`;
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                title
              });
            }

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: `Linked Jira issue: **${issueKey}** → ${jiraUrl}`
            });

      # 5) 이슈를 In Review로 전이
      - name: Transition issue to In Review
        if: steps.key.outputs.issue_key != ''
        shell: bash
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          ISSUE_KEY: ${{ steps.key.outputs.issue_key }}
          REVIEW_NAME: 검토중
        run: |
          set -e
          BASE="${JIRA_BASE_URL%/}"
          NAME="${REVIEW_NAME:-In Review}"

          sudo apt-get update >/dev/null 2>&1 && sudo apt-get install -y jq >/dev/null 2>&1

          RESP=$(curl -sS -u "$JIRA_USER_EMAIL:$JIRA_API_TOKEN" -H "Accept: application/json" \
            "$BASE/rest/api/3/issue/$ISSUE_KEY/transitions")

          ID=$(echo "$RESP" | jq -r --arg n "$NAME" '.transitions[] | select(.name==$n) | .id' | head -n1)
          if [ -z "$ID" ] || [ "$ID" = "null" ]; then
            echo "No transition named '$NAME'. Available: $(echo "$RESP" | jq -r '.transitions[].name' | xargs -I{} echo -n "{} | ")"
            exit 1
          fi

          curl -sS -u "$JIRA_USER_EMAIL:$JIRA_API_TOKEN" -H "Content-Type: application/json" \
            -X POST "$BASE/rest/api/3/issue/$ISSUE_KEY/transitions" \
            --data "{\"transition\":{\"id\":\"$ID\"}}"

          echo "Moved $ISSUE_KEY → '$NAME'"
