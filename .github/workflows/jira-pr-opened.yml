# PR이 열리거나 리뷰 준비가 되었을 때 Jira 이슈를 자동으로 관리하는 워크플로우
# Draft PR일 경우 'In Progress', Ready for Review일 경우 'In Review'로 상태를 변경합니다.

on:
  pull_request_target:
    types: [opened, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write # PR 제목 업데이트/코멘트

jobs:
  jira-on-pr-open-or-review:
    runs-on: ubuntu-latest
    steps:
      # 0) Jira 로그인
      - name: Jira Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      # 1) PR 제목/브랜치에서 이슈 키 추출
      - name: Extract Jira issue key
        id: extract
        shell: bash
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          BRANCH="${{ github.event.pull_request.head.ref }}"
          KEY=$(echo "$TITLE $BRANCH" | grep -oE '[A-Z][A-Z0-9]+-[0-9]+' | head -n1 || true)
          echo "issue_key=$KEY" >> $GITHUB_OUTPUT
          echo "Found key: $KEY"

      # 2) 키 없으면 Jira 이슈 자동 생성 (최초 PR 생성 시에만)
      - name: Create Jira issue if missing
        id: create
        if: steps.extract.outputs.issue_key == '' && github.event.action == 'opened'
        uses: atlassian/gajira-create@v3
        with:
          project: KAN
          issuetype: Task
          summary: '${{ github.event.pull_request.title }}'
          description: |
            *GitHub PR*: ${{ github.event.pull_request.html_url }}
            *Author*: ${{ github.event.pull_request.user.login }}

      # 3) 최종 이슈 키 확정
      - name: Set final issue key
        id: key
        shell: bash
        run: |
          KEY="${{ steps.extract.outputs.issue_key }}"
          if [ -z "$KEY" ]; then
            KEY="${{ steps.create.outputs.issue }}"
          fi
          echo "issue_key=$KEY" >> $GITHUB_OUTPUT
          echo "Using issue: $KEY"

      # 4) PR 제목 업데이트 및 코멘트 (최초 PR 생성 시에만)
      - name: Update PR title and comment
        if: steps.key.outputs.issue_key != '' && github.event.action == 'opened'
        uses: actions/github-script@v7
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
        with:
          script: |
            const issueKey = '${{ steps.key.outputs.issue_key }}';
            const pr = context.payload.pull_request;
            const base = process.env.JIRA_BASE_URL.replace(/\/$/, '');
            const jiraUrl = `${base}/browse/${issueKey}`;
            
            // 제목에 키가 없으면 추가
            if (!pr.title.includes(issueKey)) {
              await github.rest.pulls.update({
                owner: context.repo.owner, repo: context.repo.repo,
                pull_number: pr.number, title: `[${issueKey}] ${pr.title}`
              });
            }
            
            // Jira 링크 코멘트
            await github.rest.issues.createComment({
              owner: context.repo.owner, repo: context.repo.repo,
              issue_number: pr.number, body: `Linked Jira issue: **${issueKey}** → ${jiraUrl}`
            });

      # 5-A) Draft PR일 경우 'In Progress'로 전이
      - name: Transition to 'In Progress' for Draft PR
        if: steps.key.outputs.issue_key != '' && github.event.pull_request.draft == true
        uses: atlassian/gajira-transition@v3
        with:
          issue: ${{ steps.key.outputs.issue_key }}
          transition: 'In Progress'

      # 5-B) 리뷰 준비된 PR일 경우 'In Review'로 전이
      - name: Transition to 'In Review' for Ready PR
        if: steps.key.outputs.issue_key != '' && github.event.pull_request.draft == false
        uses: atlassian/gajira-transition@v3
        with:
          issue: ${{ steps.key.outputs.issue_key }}
          transition: 'In Review'
